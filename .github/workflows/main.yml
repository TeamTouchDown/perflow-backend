name: spring-deploy

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build:
    name: spring-deploy
    runs-on: ubuntu-latest

    steps:
      # 1. 소스 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. JDK 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3. Gradle Wrapper 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: ./perflow-backend

      # 4. FCM Config JSON 파일 생성
      - name: Create FCM Config JSON file
        run: |
          mkdir -p ./perflow-backend/src/main/resources/config
          echo "${{ secrets.FCM_CONFIG_JSON }}" > ./perflow-backend/src/main/resources/fcm-config.json

      # 4. Gradle 빌드
      - name: Build with Gradle
        run: ./gradlew clean build
        working-directory: ./perflow-backend
        # Gradle wrapper가 없는 경우 아래 명령을 사용하세요:
        # run: gradle clean build

      # 5. AWS 자격 증명 및 리전 설정
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 6. AWS ECR 로그인
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # 7. Docker 이미지 빌드 및 태깅
      - name: Build and Tag Docker image
        run: |
          IMAGE_TAG=latest
          COMMIT_SHA=${GITHUB_SHA::8}
          ECR_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}
          docker build -t $ECR_URI:$IMAGE_TAG .
          docker tag $ECR_URI:$IMAGE_TAG $ECR_URI:$COMMIT_SHA
        working-directory: ./perflow-backend
      # 8. Docker 이미지 ECR에 푸시
      - name: Push Docker images to ECR
        run: |
          ECR_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}
          docker push $ECR_URI:latest
          docker push $ECR_URI:${GITHUB_SHA::8}
        working-directory: ./perflow-backend
      # 9. GitOps Repository 업데이트
      - name: Checkout ArgoCD GitOps Repository
        uses: actions/checkout@v3
        with:
          repository: ${{ secrets.ARGOCD_GITOPS_REPO }} # ArgoCD GitOps 리포지토리 URL
          token: ${{ secrets.ARGOCD_GITOPS_TOKEN }} # Personal Access Token
          ref: main # 변경할 브랜치

      - name: Update Kubernetes Manifests
        run: |
          # 이미지 태그를 Kubernetes 리소스 파일에 업데이트
          sed -i "s|image: .*|image: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest|g" ./k8s/PerflowBackendDeployment.yaml

      - name: Commit and Push Changes to GitOps Repo
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          git commit -m "Update image tag to latest"
          git push
