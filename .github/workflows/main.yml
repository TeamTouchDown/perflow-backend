name: spring-deploy

on:
  # pull_request:
  #   branches:
  #     - deploy
  push:
    branches:
      - deploy

jobs:
  build:
    name: spring-deploy
    runs-on: ubuntu-latest

    steps:
      # 1. 소스 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. JDK 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3. Gradle 빌드
      - name: Build with Gradle
        run: ./gradlew clean build
        # Gradle wrapper가 없는 경우 아래 명령을 사용하세요:
        # run: gradle clean build

      # 4. AWS ECR 로그인
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          region: ${{ secrets.AWS_REGION }}

      # 5. Docker 이미지 빌드 및 태깅
      - name: Build and Tag Docker image
        run: |
          IMAGE_TAG=latest
          COMMIT_SHA=${GITHUB_SHA::8}
          ECR_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}
          docker build -t $ECR_URI:$IMAGE_TAG .
          docker tag $ECR_URI:$IMAGE_TAG $ECR_URI:$COMMIT_SHA

      # 6. Docker 이미지 ECR에 푸시
      - name: Push Docker images to ECR
        run: |
          ECR_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}
          docker push $ECR_URI:latest
          docker push $ECR_URI:${GITHUB_SHA::8}
